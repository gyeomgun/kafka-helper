version: "3"
services:
  mongodb:
    image: mongo:3.2.4
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
    command: mongod --smallfiles --logpath=/dev/null # --quiet
    container_name: "mongodb"
    ports:
      - 27017:27017
    command: --smallfiles
  zookeeper:
    container_name: local-zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - 2181:2181
  kafka:
    container_name: local-kafka
    image: wurstmeister/kafka:2.12-2.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "common-deadletter-v1:1:1,common-maintenance-v1:1:1" # Topic명:Partition개수:Replica개수
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  app:
    build:
      context: ./
      dockerfile: ./kafka-helper-web/Dockerfile
    image: kafka-helper-web # 우리가 Dockerfile에서 지정했던 app 이름
    ports:
      - 8081:8081
    depends_on:
      - mongodb
      - zookeeper
      - kafka
    links:
      - mongodb
      - zookeeper
      - kafka